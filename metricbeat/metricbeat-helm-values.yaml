daemonset:
  hostNetworking: true
  extraEnvs:
    - name: LOGGING_ELASTIC_CLOUD_ID
      valueFrom:
        secretKeyRef:
          name: logging-cloud-secret
          key: cloud-id
    - name: LOGGING_ELASTIC_CLOUD_AUTH
      valueFrom:
        secretKeyRef:
          name: logging-cloud-secret
          key: cloud-auth
    - name: LOGGING_ELASTIC_CLOUD_UUID
      valueFrom:
        secretKeyRef:
          name: logging-cloud-secret
          key: cluster-uuid          
  metricbeatConfig:
    metricbeat.yml: |
      setup.template.settings:
        index.mapping.total_fields.limit: 10000

      metricbeat.autodiscover:
        providers:
         - type: kubernetes
           host: ${NODE_NAME}
           hints.enabled: true

      processors:
        - add_cloud_metadata:
        - add_host_metadata:
        - add_kubernetes_metadata:
        - add_docker_metadata:

      output.logstash:
        hosts: [ "proxy-logstash.elastic-monitoring.svc.cluster.local:5044" ]

      metricbeat.modules:
      - module: system
        period: 10s
        metricsets:
          - cpu
          - load
          - memory
          - network
          - process
          - process_summary
          - core
          - diskio
          # - socket
        processes: ['.*']
        process.include_top_n:
          by_cpu: 5      # include top 5 processes by CPU
          by_memory: 5   # include top 5 processes by memory

      - module: system
        period: 1m
        metricsets:
          - filesystem
          - fsstat
        processors:
          - drop_event:
              when:
                regexp:
                  system.filesystem.mount_point: '^/(sys|cgroup|proc|dev|etc|host|lib)($|/)'

      - module: kubernetes
        metricsets:
          - node
          - system
          - pod
          - container
          - volume
        period: 10s
        host: "${NODE_NAME}"
        hosts: ["https://${NODE_NAME}:10250"]
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        ssl.verification_mode: "none"
        processors:
          - add_kubernetes_metadata: ~

      - module: kubernetes
        enabled: true
        metricsets:
          - event

      - module: docker
        metricsets:
          - "container"
          - "cpu"
          - "diskio"
          - "event"
          - "healthcheck"
          - "info"
          - "image"
          - "memory"
          - "network"
        hosts: ["unix:///var/run/docker.sock"]
        period: 10s
        enabled: true

      logging.level: warning

      monitoring:
        enabled: true
        cluster_uuid: "${LOGGING_ELASTIC_CLOUD_UUID}"
        cloud.id: "${LOGGING_ELASTIC_CLOUD_ID}"
        cloud.auth: "${LOGGING_ELASTIC_CLOUD_AUTH}"

deployment:
  extraEnvs:
    - name: LOGGING_ELASTIC_CLOUD_ID
      valueFrom:
        secretKeyRef:
          name: logging-cloud-secret
          key: cloud-id
    - name: LOGGING_ELASTIC_CLOUD_AUTH
      valueFrom:
        secretKeyRef:
          name: logging-cloud-secret
          key: cloud-auth
    - name: LOGGING_ELASTIC_CLOUD_UUID
      valueFrom:
        secretKeyRef:
          name: logging-cloud-secret
          key: cluster-uuid
  metricbeatConfig:
      metricbeat.yml: |
        setup.template.settings:
          index.mapping.total_fields.limit: 10000

        processors:
          - add_cloud_metadata:

          # host.name interferes with Metrics UI
          - drop_fields:
              fields: [ "host.name" ]

        output.logstash:
          hosts: ["proxy-logstash.elastic-monitoring.svc.cluster.local:5044"]

        metricbeat.modules:

          # Needs to be disabled explicitly
        - module: system
          enabled: false

        - module: kubernetes
          enabled: true
          metricsets:
            - state_node
            - state_deployment
            - state_replicaset
            - state_pod
            - state_container
          period: 10s
          hosts: ["${KUBE_STATE_METRICS_HOSTS}"]

        logging.level: warning

        monitoring:
          enabled: true
          cluster_uuid: "${LOGGING_ELASTIC_CLOUD_UUID}"
          cloud.id: "${LOGGING_ELASTIC_CLOUD_ID}"
          cloud.auth: "${LOGGING_ELASTIC_CLOUD_AUTH}"
